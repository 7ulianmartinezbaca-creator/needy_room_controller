/* 
 * Project myProject
 * Author: Your Name
 * Date: 
 * For comprehensive documentation and examples, please visit:
 * https://docs.particle.io/firmware/best-practices/firmware-template/
 */


#include "Particle.h"
#include "Encoder.h"
#include "Adafruit_SSD1306.h"
#include "adafruit_GFX.h"
#include "IoTclassroom_CNM.h"
#include "Button.h"
#include "Adafruit_BME280.h"
#include "neopixel.h"
#include "hue.h"
#include "Colors.h"

SYSTEM_MODE(MANUAL);

const int OLED_RESET=-1;

Encoder enc1(D8,D9);
Encoder enc0(D18,D19);

Button Gbu(D15);
Button Rbu(D16);
Button Bbu(D17);
Button encb0(D6);
Button encb1(D7);

const int MYWEMO0 = 5;
const int MYWEMO1 = 0;
const int pd = A1;
const int pnum = 12;
int status;
int pos1;
int pos2;
int x;
int z;

bool encs0;
bool encs1;
bool butt1;
bool butt2;
bool butt3;

float tempC;
float pressPA;
float humidRH;
float tempF;
float inHg;
float pascal = 3386.39;

String pdval;

Adafruit_SSD1306 display(OLED_RESET);
Adafruit_BME280 bme;
Adafruit_NeoPixel pixle(pnum,SPI1,WS2812B);

const unsigned char bitmap_jr80dc[] = {
  0x7C,0x0E,0x01,0x80,0x07,0x00,0x01,0xE0,0x00,0x08,
  0x78,0x1E,0x01,0x80,0x1F,0x80,0x0F,0x80,0x07,0x88,
  0x7F,0xFB,0x03,0x00,0x79,0xFF,0xFE,0xC0,0x1F,0xC8,
  0x7F,0xE3,0xFF,0xFF,0xE0,0x3F,0xF0,0xF8,0x78,0xF8,
  0x60,0x00,0xFD,0xFF,0x00,0x00,0x00,0x3F,0xE0,0x38,
  0x60,0x00,0x00,0x0C,0x00,0x00,0x00,0x01,0x08,0x18,
  0x70,0x00,0x10,0x07,0x00,0x00,0xE0,0x01,0xF8,0x18,
  0x60,0x00,0x00,0x03,0xE0,0x00,0x38,0x00,0x60,0x18,
  0x78,0x00,0x78,0x00,0x7C,0x00,0xFE,0x00,0x60,0x18,
  0x5C,0x00,0xEC,0x00,0xCF,0xFF,0xC7,0x80,0x30,0x38,
  0x47,0x83,0x87,0x83,0x80,0xFF,0x7F,0xF8,0x7F,0xE8,
  0x41,0xFE,0x00,0xFE,0x00,0x01,0x40,0x7F,0xE7,0x88,
  0x40,0x00,0x00,0x0F,0x00,0x01,0x4D,0x50,0x00,0x08,
  0x40,0x01,0xFF,0xFF,0x80,0x01,0x4A,0x50,0x00,0x08,
  0x40,0x07,0xF8,0x03,0x80,0x01,0x5A,0x50,0x00,0x08,
  0x40,0x04,0x18,0x03,0x80,0x01,0x56,0x50,0x00,0x08,
  0x40,0x04,0x00,0x03,0x80,0x01,0x74,0x50,0x00,0x08,
  0x40,0x04,0x00,0x03,0x80,0x01,0xEF,0x50,0x00,0x08,
  0x40,0x04,0x38,0x07,0x80,0x01,0x4B,0x50,0x00,0x08,
  0x40,0x04,0x78,0x08,0x80,0x01,0xDB,0xD0,0x00,0x48,
  0x40,0x06,0x38,0x10,0x00,0x00,0xD7,0xD0,0x00,0x28,
  0x40,0x06,0x14,0x10,0x40,0x00,0xE5,0x50,0x00,0x08,
  0x40,0x06,0x42,0x13,0xC0,0x00,0xFF,0xD0,0x01,0x08,
  0x70,0x06,0x43,0x1F,0xC8,0x00,0xBE,0x10,0x01,0x88,
  0x70,0x04,0x41,0x27,0x10,0x00,0x81,0xF0,0x00,0x88,
  0x58,0x06,0x40,0xC0,0x31,0x00,0xFF,0xC0,0x02,0x58,
  0x58,0x04,0x80,0x6F,0xC1,0x00,0x00,0x00,0x02,0x58,
  0x5C,0x05,0x80,0x58,0x04,0x40,0x00,0x00,0x04,0x68,
  0x58,0x01,0x02,0xA8,0xE0,0xC0,0x00,0x00,0x04,0x28,
  0x52,0x02,0x44,0x18,0x11,0xE0,0x00,0x20,0x08,0x28,
  0x42,0x02,0x4C,0x38,0xE1,0xE0,0x00,0x60,0x08,0x08,
  0x40,0x00,0x8C,0x7A,0xE1,0xFF,0xE0,0x50,0x10,0x08,
  0x41,0x02,0x00,0xF9,0xE0,0x8F,0xD0,0x90,0x10,0x18,
  0x41,0x03,0x01,0xF8,0xC2,0x0F,0xD0,0x88,0xE0,0x28,
  0x40,0x82,0x01,0xF8,0x10,0x0F,0xE1,0x09,0x44,0x08,
  0x40,0xA2,0x01,0xF8,0xE0,0x02,0x40,0x0B,0x00,0x48,
  0x44,0x62,0x01,0xF8,0x01,0x80,0x82,0x21,0x08,0x48,
  0x48,0x52,0x03,0xF0,0x00,0xBF,0x04,0x7E,0x08,0x08,
  0x40,0x42,0x07,0xE0,0x00,0x80,0x08,0x00,0x10,0x08,
  0x42,0x0A,0x04,0xE0,0x00,0x80,0x09,0x00,0x90,0x08,
  0x62,0x06,0x64,0xA2,0x00,0x80,0x50,0x03,0xC0,0x78,
  0x60,0x06,0x04,0x6A,0x00,0x80,0xD2,0xC6,0xC0,0x68,
  0x41,0x02,0x05,0x6A,0x00,0x00,0x92,0x02,0x60,0x68,
  0x40,0x93,0x05,0x2A,0x00,0x40,0xB8,0x01,0x20,0xE8,
  0x40,0x91,0x05,0x25,0x00,0x40,0x88,0x07,0x20,0xB8,
  0x40,0x69,0xA4,0xA5,0x00,0x40,0x82,0x01,0x21,0xB8,
  0x40,0x40,0xE4,0xB2,0x80,0xC0,0xA0,0x71,0x1D,0x38,
  0x40,0x04,0x9E,0xF1,0xFE,0x80,0x98,0x03,0x77,0x18,
  0x40,0x04,0x6F,0xFC,0xC3,0x40,0xA0,0x03,0xB6,0x18,
  0x40,0x00,0x66,0x87,0xFA,0x50,0x81,0xC3,0x12,0x18,
  0x40,0x02,0x07,0x80,0x0A,0xD8,0x80,0x7F,0x22,0x08,
  0x40,0x00,0x07,0xFF,0xFB,0xC4,0x80,0x71,0x22,0x08,
  0x40,0x01,0x46,0x77,0xB8,0xF8,0x00,0x43,0x40,0x08,
  0x40,0x00,0x87,0xD7,0xFF,0xFD,0x08,0x64,0x80,0x08,
  0x40,0x00,0xA3,0x94,0x7A,0xE1,0x18,0x50,0x80,0x08,
  0x40,0x00,0x02,0x14,0x7A,0xE2,0x2E,0x51,0x04,0x28,
  0x40,0x00,0x12,0x14,0x7A,0xE2,0xCA,0x4B,0x10,0x28,
  0x40,0x00,0x1A,0x15,0xFA,0xE3,0x80,0x8A,0x00,0x18,
  0x40,0x00,0x1A,0x14,0x3A,0xE0,0x00,0x86,0x23,0x18,
  0x40,0x00,0x06,0x14,0x3A,0xE0,0x01,0x04,0x02,0x08,
  0x40,0x80,0x02,0x14,0x3A,0xA0,0x03,0x00,0x02,0x08,
  0x45,0x80,0x01,0x14,0x3A,0xE0,0x02,0x10,0x82,0x08,
  0x47,0x44,0x01,0x1C,0x1E,0xC0,0x66,0x29,0x00,0x08,
  0x47,0x44,0x61,0x00,0x06,0x00,0x64,0x08,0x00,0x08
};

void setup() {
  Serial.begin(9600);
  waitFor(Serial.isConnected,10000);

  WiFi.on();
  WiFi.clearCredentials();
  WiFi.setCredentials("IoTNetwork");
  WiFi.connect();
  while (!WiFi.ready()){
    Serial.printf(".");
  }
  Serial.printf("Connected\n");

  status = bme.begin(0x76);
  if (status == false){
    Serial.printf("BME 0x%02X failed to start\n",0X76);
  }

  display.begin(SSD1306_SWITCHCAPVCC,0x3C);
  display.begin();
  display.clearDisplay();
  display.setTextSize(1.5);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  display.printf("hello julian");
  display.display();
  display.clearDisplay();

  pixle.begin();
  pixle.setBrightness(150);
  pixle.show();

  pinMode(pd,INPUT);
}


void loop() {
  if (Bbu.isClicked()){
    butt3 = !butt3;
  }
  if(butt3){
    for ( x = 0 ; x <= 11 ; x++){
      pixle.setPixelColor(x,violet);
      pixle.show();
    }
    pos1 = enc1.read();
    if (pos1 >= 255){
      pos1 = 255;
      enc1.write(255);
    }
    if (pos1<=0){
      pos1 = 0;
      enc1.write(0);
    }
    if (Gbu.isClicked()){
      butt1 = !butt1;
    }
    if (butt1){
      wemoWrite(MYWEMO0,HIGH);
    }
    if(!butt1){
      wemoWrite(MYWEMO0,LOW);
    }
    if (Rbu.isClicked()){
      butt2 = !butt2; 
    }
    if (butt2){
      wemoWrite(MYWEMO1,HIGH);
    }
    if (!butt2){
      wemoWrite(MYWEMO1,LOW);
    }
    if (encb0.isClicked()){
      encs0 = !encs0;
    }
    if (encs0){
      setHue(1,true,HueViolet,pos1,255);
    }
    if (!encs0){
      setHue(1,false,HueViolet,0,255);
    }
    if (encb1.isClicked()){
      encs1 = !encs1;
    }
    if (encs1){
      setHue(2,true,HueViolet,pos1,255);
      setHue(3,true,HueViolet,pos1,255);
      setHue(4,true,HueViolet,pos1,255);
      setHue(5,true,HueViolet,pos1,255);
    }
    if (!encs1){
      setHue(2,false,HueViolet,pos1,255);
      setHue(3,false,HueViolet,pos1,255);
      setHue(4,false,HueViolet,pos1,255);
      setHue(5,false,HueViolet,pos1,255);
    }
  }
  //Serial.printf("position of enc1 %i\n position of enc2 %i\n",pos1,pos2);
  tempC = bme.readTemperature();
  pressPA = bme.readPressure();
  humidRH = bme.readHumidity();
  inHg = pressPA * (1/pascal);
  tempF = 9/5.0 * tempC + 32;
  
  display.setCursor(0,0);
  display.clearDisplay();
  display.printf("Temp %0.2f\nSet to %i\n",tempF,pos2);
  display.display();
  z = analogRead(pd);
  Serial.printf("%i\n",z);
  if (!butt3){
    if (pd <= 2000){
      setHue(2,true,HueViolet,pos1,255);
      setHue(3,true,HueViolet,pos1,255);
      setHue(4,true,HueViolet,pos1,255);
      setHue(5,true,HueViolet,pos1,255);
    }
    if (pd >= 2000){
      setHue(2,false,HueViolet,pos1,255);
      setHue(3,false,HueViolet,pos1,255);
      setHue(4,false,HueViolet,pos1,255);
      setHue(5,false,HueViolet,pos1,255);
    }
    if (tempF >= pos2){
      //wemoWrite(MYWEMO1,HIGH);
    }
    if (tempF <= pos2){
    }
  }
}
